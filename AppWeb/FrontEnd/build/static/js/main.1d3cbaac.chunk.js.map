{"version":3,"sources":["components/ksnackbar.jsx","utilitarios/ApiUtilities.js","theme.jsx","main.jsx","login.jsx","utilitarios/GeneralUtilities.js","general/configuracoes/configuracoes-detalhes.jsx","general/configuracoes/configuracoes-lista.jsx","general/configuracoes/configuracoes.jsx","general/visao-geral.jsx","general/usuarios/usuarios-detalhes.jsx","general/usuarios/usuarios-lista.jsx","general/usuarios/usuarios.jsx","general/formulario.jsx","app.js","index.js"],"names":["KSnackBar","props","react_default","a","createElement","Snackbar","open","options","anchorOrigin","vertical","horizontal","onClose","event","message","TransitionComponent","Fade","autoHideDuration","action","Fragment","IconButton","size","aria-label","color","onClick","Close_default","fontSize","ApiUtilities","[object Object]","url","values","method","querystring","formdata","FormData","prop","append","fetch","credentials","body","useStyles","makeStyles","theme","root","display","width","toolbar","paddingRight","toolbarIcon","Object","objectSpread2","alignItems","justifyContent","padding","mixins","appBar","height","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","concat","enteringScreen","menuButton","marginRight","menuButtonHidden","appTitle","flexGrow","marginTop","spacing","title","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","avatar","addButton","submit","margin","fab","bottom","right","maxHeight","paperItens","marginBottom","speedDial","Main","classes","_React$useState","React","useState","_React$useState2","slicedToArray","className","CssBaseline","AppBar","clsx","Toolbar","Typography","component","variant","noWrap","history","push","ExitToApp_default","Drawer","List","modules","map","item","ListItem","key","path","button","Link","to","ListItemIcon","Tooltip","tooltip","placement","icon","ListItemText","primary","Container","maxWidth","ui","Box","pt","Copyright","align","href","Date","getFullYear","main","backgroundColor","palette","secondary","form","withRouter","_useState","_useState2","_useState3","_useState4","snackBarOpen","setSnackBarOpen","_useState5","usuario","senha","empresa","_useState6","inputValues","setInputValues","disabled","setDisabled","_useState7","_useState8","loading","setLoading","Avatar","LockOutlined_default","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","target","value","type","Select","native","Button","config","service","then","res","json","Code","Message","catch","error","LinearProgress","mt","Actions","LIST","ADD","UPDATE","DELETE","VIEW","ConfiguracoesDetalhe","style","Grid","xs","sm","codigo","nome","descricao","valor","justify","okClick","cancelClick","ConfiguracoesLista","speedDialOpen","setSpeedDialOpen","SpeedDial","ariaLabel","SpeedDialIcon","direction","onOpen","addClick","Menu","anchorEl","menuActionAnchorRef","Boolean","menuActionClose","keepMounted","MenuItem","viewClick","editClick","deleteClick","filterChange","filterClick","FilterList_default","TableContainer","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","data","row","filial","menuActionClick","MoreVert_default","TablePagination","labelRowsPerPage","rowsPerPageOptions","page","count","totalRows","rowsPerPage","onChangePage","changePage","onChangeRowsPerPage","changeRowsPerPage","Configuracoes","setAction","setAnchorEl","_React$useState3","_React$useState4","setData","_React$useState5","_React$useState6","_React$useState7","_React$useState8","setPage","_React$useState9","_React$useState10","setRowsPerPage","_React$useState11","_React$useState12","setTotalRows","_React$useState13","_React$useState14","filter","setFilter","useEffect","list","_confirm","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","this","arguments","_x","_x2","_list","_callee2","_context2","limit","order","Content","rows","find","_x3","_find","_callee3","_context3","parentElement","cells","innerText","model","Paper","currentTarget","newPage","parseInt","confirm","VisaoGeral","UsuariosDetalhe","numero","InputLabelProps","shrink","agenteId","equipe","email","FormControlLabel","control","Checkbox","inativo","checked","UsuariosLista","Chip","Usuarios","funil","participaRoleta","gerente","Formularios","brises","acm","pisoElevado","forro","brisePVC","piso","carpete","drywall","reforma","estruturaMetalica","projeto","moveisCorporativos","divisoriasDPT","outros","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","_useState15","sobrenome","celular","fixo","cidade","uf","nomeObra","produto","obs","anexo","status","_useState16","App","assign","Dashboard_default","Settings_default","People_default","react_router_dom","basename","baseName","react_router","exact","render","login","pathRpt","window","location","indexOf","document","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1d3cbaac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport { Snackbar, Fade, IconButton } from \"@material-ui/core\";\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default function KSnackBar(props) {\r\n    return (\r\n        <Snackbar\r\n            open={props.options[0].open}\r\n            anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'center',\r\n            }}\r\n            onClose={(event) => {\r\n                props.options[1]({\r\n                    open: false,\r\n                    message: \"\"\r\n                });\r\n            }}\r\n            TransitionComponent={Fade}\r\n            message={props.options[0].message}\r\n            autoHideDuration={3000}\r\n            action={\r\n                <React.Fragment>\r\n                    <IconButton\r\n                        size=\"small\"\r\n                        aria-label=\"close\"\r\n                        color=\"inherit\"\r\n                        onClick={\r\n                            (event) => {\r\n                                props.options[1]({\r\n                                    open: false,\r\n                                    message: \"\"\r\n                                });\r\n                            }\r\n                        }\r\n                    >\r\n                        <CloseIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                </React.Fragment>\r\n            }\r\n        />\r\n    )\r\n}","\r\nexport default class ApiUtilities {\r\n    static fetch(url, values, method) {\r\n\r\n        var querystring = \"XDEBUG_SESSION_START=netbeans-xdebug\";\r\n\r\n        if (method != \"GET\") {\r\n            var formdata = new FormData();\r\n\r\n            for (var prop in values) {\r\n                formdata.append(prop, values[prop]);\r\n            }\r\n\r\n            formdata.append(\"XDEBUG_SESSION_START\", \"netbeans-xdebug\");\r\n\r\n        } else {\r\n\r\n            for (var prop in values) {\r\n                querystring += \"&\" + prop + \"=\" + values[prop];\r\n            }\r\n        }\r\n\r\n        return fetch(url + \"?\" + querystring, {\r\n            method: method,\r\n            credentials: \"include\",\r\n            body: formdata\r\n        });\r\n    }\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    width: '100%'\r\n  },\r\n  toolbar: {\r\n    //height: 40,\r\n    paddingRight: 10 // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar\r\n  },\r\n  appBar: {\r\n    height: 55,\r\n    //zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginRight: 36\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\"\r\n  },\r\n  appTitle: {\r\n    flexGrow: 1,\r\n    marginTop: theme.spacing(-1),\r\n    marginLeft: theme.spacing(7)\r\n  },  \r\n  title: {\r\n    flexGrow: 1,\r\n    marginTop: theme.spacing(-1),\r\n    marginLeft: theme.spacing(-2)\r\n  },\r\n  drawerPaper: {\r\n    //marginTop: 56,\r\n    //height: \"92%\",\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing(7), //isso aqui esconde o painel lateral\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(7)\r\n    }\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: \"100vh\",\r\n    overflow: \"auto\"\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4)\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(7),\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\"\r\n  },\r\n  fixedHeight: {\r\n    height: 240\r\n  },\r\n  avatar: {\r\n    //alignItems: \"center\",\r\n    marginTop: theme.spacing(-1),\r\n    marginLeft: theme.spacing(-2),\r\n    //marginBottom: theme.spacing(1)\r\n  },\r\n  addButton: {\r\n    marginRight: theme.spacing(-3)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 1, 2)\r\n  },\r\n  fab: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },  \r\n  container: {\r\n    maxHeight: 440,\r\n  },  \r\n  paperItens: {\r\n    marginTop: theme.spacing(0),\r\n    marginLeft: theme.spacing(0),\r\n    marginBottom: theme.spacing(2),\r\n    padding: theme.spacing(2),\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\"\r\n  },\r\n  speedDial: {\r\n    position: 'absolute',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React from \"react\";\r\n\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {\r\n  Typography,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  CssBaseline,\r\n  Toolbar,\r\n  AppBar,\r\n  ListSubheader,\r\n  IconButton,\r\n  Badge,\r\n  Drawer,\r\n  Avatar,\r\n  Divider,\r\n  List,\r\n  Container,\r\n  Tooltip,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n  Box\r\n} from \"@material-ui/core\";\r\n\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\n//import Title from \"./Title\";\r\n\r\nimport useStyles from \"./theme\";\r\n\r\nexport default function Main(props) {\r\n  const classes = useStyles();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLogOff = () => {\r\n    props.history.push(\"/\");\r\n  };\r\n\r\n  //const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar \r\n        position=\"absolute\"\r\n        className={clsx(classes.appBar, open && classes.appBarShift)}\r\n      >\r\n        <Toolbar className={classes.toolbar}>\r\n          {/* <Avatar className={classes.avatar} /> */}\r\n          {/* <Avatar className={classes.avatar} src=\"/static/img/avatar/1.jpg\" /> */}\r\n          <Typography\r\n            component=\"h1\"\r\n            variant=\"h6\"\r\n            color=\"inherit\"\r\n            noWrap\r\n            className={classes.appTitle}\r\n          >\r\n            PONTOTRACK\r\n          </Typography>  \r\n          <IconButton \r\n            color=\"inherit\" \r\n            onClick={handleLogOff}\r\n          >\r\n            {/* <Badge badgeContent={4} color=\"secondary\">\r\n              <NotificationsIcon />\r\n            </Badge> */}\r\n            <ExitToAppIcon />\r\n          </IconButton>                  \r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)}}\r\n        //open={open}\r\n      >\r\n        {/* <Avatar className={classes.avatar} src=\"/static/img/avatar/1.jpg\" /> */}\r\n        {/* <p /> */}\r\n        {/* <Divider /> */}\r\n        <List>\r\n          {/* <MainListItems /> */}\r\n          {\r\n            props.modules.map(item => (\r\n              <ListItem key={item.path} button component={Link} to={item.path}>\r\n                <ListItemIcon>\r\n                  <Tooltip title={item.tooltip} placement=\"right\"> \r\n                      {/* <DashboardIcon /> */}\r\n                      {item.icon}\r\n                  </Tooltip>          \r\n                </ListItemIcon>\r\n                <ListItemText primary={item.title} />\r\n              </ListItem>)\r\n            )\r\n          }\r\n        </List>\r\n      </Drawer>            \r\n      <main className={classes.content}>\r\n        <div className={classes.appBarSpacer} />\r\n        <Container maxWidth=\"xl\" className={classes.container}>\r\n          {props.ui}\r\n          <Box pt={4}>{/* <Copyright /> */}</Box>\r\n        </Container>\r\n      </main>      \r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useRef, useState, Fragment } from \"react\";\r\n// import React from \"react\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport KSnackBar from \"./components/ksnackbar\";\r\nimport ApiUtilities from \"./utilitarios/ApiUtilities\";\r\nimport main from \"./main\";\r\n\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  Slider,\r\n  TableContainer,\r\n  Snackbar,\r\n  Fade,\r\n  IconButton,\r\n  LinearProgress\r\n} from \"@material-ui/core\";\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {\"Copyright © \"}\r\n      <Link color=\"inherit\" href=\"http://www.vsisolucoes.com.br/\">\r\n        VSI Soluções\r\n      </Link>{\" \"}\r\n      {new Date().getFullYear()}\r\n      {\".\"}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  main: {\r\n    backgroundColor: \"#ffffff\"\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\"\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(3),\r\n    backgroundColor: theme.palette.secondary.main\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1)\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2)\r\n  }\r\n}));\r\n\r\nfunction Login(props) {\r\n  const [snackBar, setSnackBar] = useState({ open: false, message: \"\" });\r\n  const [snackBarOpen, setSnackBarOpen] = useState({ open: false, message: \"\" }); // Isso controla a caixa de mensagem, para quando ocorre um erro\r\n\r\n  const [inputValues, setInputValues] = useState({\r\n    usuario: '',\r\n    senha: '',\r\n    // funil:'',\r\n    empresa: \"0\",\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  // \r\n  //Variavel pra Controlar o disable dos Botões\r\n  //\r\n  const [disabled, setDisabled] = React.useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n\r\n  const handleLogIn = () => {\r\n\r\n    setLoading(true);\r\n\r\n    var formdata = new FormData();\r\n    for (var prop in inputValues) {\r\n      formdata.append(prop, inputValues[prop]);\r\n    }\r\n\r\n    ApiUtilities.fetch(props.config.service + \"usuario/login\", inputValues, \"POST\")\r\n      .then((res) => {\r\n        res.json().then((res) => {\r\n\r\n          if (res.Code === 200) {\r\n\r\n            props.history.push(\"/visao-geral\");\r\n\r\n          } else {\r\n            setSnackBarOpen({\r\n              open: true,\r\n              message: res.Message\r\n            });\r\n\r\n            setLoading(false);\r\n          }\r\n        }).catch((error) => {\r\n          setSnackBarOpen({\r\n            open: true,\r\n            message: \"Erro de comunicação: \" + error.message\r\n          });\r\n          setLoading(false);\r\n        });\r\n\r\n        setDisabled(false);\r\n      });\r\n  };\r\n\r\n  const snakeBarClose = (event) => {\r\n    setSnackBar({\r\n      open: false,\r\n      message: \"\"\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      component=\"main\"\r\n      maxWidth=\"xs\"\r\n      className={classes.main}\r\n    >\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <main\r\n          inputValues={inputValues}\r\n          setInputValues={setInputValues}\r\n        />\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Acesso ao sistema\r\n        </Typography>\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"usuario\"\r\n          label=\"Usuário\"\r\n          autoComplete=\"email\"\r\n          autoFocus\r\n          onChange={(event) => { setInputValues({ ...inputValues, [\"usuario\"]: event.target.value }) }}\r\n          disabled={!disabled ? loading : disabled}\r\n        />\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          id=\"senha\"\r\n          label=\"Senha\"\r\n          type=\"password\"\r\n          autoComplete=\"current-password\"\r\n          onChange={(event) => { setInputValues({ ...inputValues, [\"senha\"]: event.target.value }) }}\r\n          disabled={!disabled ? loading : disabled}\r\n        />\r\n\r\n        <br />\r\n        <Select\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          label=\"Empresa\"\r\n          native\r\n          onChange={(event) => { setInputValues({ ...inputValues, [\"empresa\"]: event.target.value }) }}\r\n          value={inputValues.empresa}\r\n          disabled={!disabled ? loading : disabled}\r\n        >\r\n          <option value=\"0\">PONTOTRACK</option>\r\n          {/* <option value=\"2\">MTC</option> */}\r\n\r\n        </Select>\r\n\r\n        <Button\r\n          fullWidth\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          id=\"entrar\"\r\n          className={classes.submit}\r\n          onClick={handleLogIn}\r\n          disabled={!disabled ? loading : disabled}\r\n        >\r\n          Entrar\r\n          </Button>\r\n\r\n        {loading && <div> <br /><LinearProgress /> </div>}\r\n\r\n      </div>\r\n      <br />\r\n      {loading && <LinearProgress />}\r\n\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n\r\n      <KSnackBar\r\n        options={[snackBarOpen, setSnackBarOpen]}\r\n      />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default withRouter(Login);","\r\nexport const Actions = {\r\n    LIST: 0, // Tela em modo de lista\r\n    ADD: 1, // Tela em modo de inclusao\r\n    UPDATE: 2, // Tela em modo de alteracao\r\n    DELETE: 3, // Tela em modo de exclusao\r\n    VIEW: 4 // Tela em modo de exclusao\r\n};\r\n\r\nexport const DEBUG = \"XDEBUG_SESSION_START=netbeans-xdebug\";\r\n","import React from \"react\";\r\n\r\nimport useStyles from \"../../theme\";\r\n\r\nimport { Box, Grid, TextField, Paper, Table, TableHead, TableCell, TableBody, TableRow, Button, Select, InputLabel, FormControl, FormLabel, LinearProgress } from \"@material-ui/core\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport { Actions } from \"../../utilitarios/GeneralUtilities\";\r\n\r\nexport default function ConfiguracoesDetalhe(props) {\r\n\r\n    //\r\n    // Crio o tema da aplicacao, cores, fontes etc\r\n    //    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            style={{ display: (props.action == Actions.ADD || props.action == Actions.UPDATE || props.action == Actions.DELETE || props.action == Actions.VIEW ? \"block\" : \"none\") }}>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12} sm={3}>\r\n                    <TextField\r\n                        label=\"Código\"\r\n                        onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"codigo\"]: event.target.value })}}\r\n                        value={props.inputValues.codigo}\r\n                        variant=\"standard\"\r\n                        fullWidth\r\n                        disabled\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                    <TextField\r\n                        label=\"Nome\"\r\n                        onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"nome\"]: event.target.value })}}\r\n                        value={props.inputValues.nome}\r\n                        variant=\"standard\"\r\n                        fullWidth\r\n                        disabled={props.action == Actions.DELETE ? true : !props.disabled ? props.loading : props.disabled}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        label=\"Descrição\"\r\n                        onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"descricao\"]: event.target.value })}}\r\n                        value={props.inputValues.descricao}\r\n                        variant=\"standard\"\r\n                        fullWidth\r\n                        disabled={props.action == Actions.DELETE ? true : !props.disabled ? props.loading : props.disabled}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                    <TextField\r\n                        label=\"Valor\"\r\n                        onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"valor\"]: event.target.value })}}\r\n                        value={props.inputValues.valor}\r\n                        variant=\"standard\"\r\n                        fullWidth\r\n                        disabled={props.action == Actions.DELETE ? true : !props.disabled ? props.loading : props.disabled}\r\n                    />\r\n                </Grid>\r\n\r\n                {/* <Grid item xs={12} sm={12}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"inativo\"]: event.target.checked })}}\r\n                                checked={props.inputValues.inativo}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Inativo\"\r\n                        disabled={props.action == Actions.DELETE ? true : !props.disabled ? props.loading : props.disabled}\r\n                    />\r\n                </Grid> */}\r\n\r\n                <Grid container justify=\"flex-end\">\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={props.okClick}\r\n                            disabled={!props.disabled ? props.loading : props.action == Actions.DELETE ? props.loading : props.disabled}\r\n                        >\r\n                            OK\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={props.cancelClick}\r\n                            disabled={props.loading}\r\n                        >\r\n                            Cancelar\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    );\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n//\r\n// Imports MATERIAL-UI\r\n//\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport {    \r\n    IconButton,  \r\n    Tooltip,\r\n    TextField,   \r\n    MenuItem,\r\n    Menu,\r\n    TableContainer,\r\n    TablePagination, Grid\r\n} from \"@material-ui/core\";\r\n\r\n//\r\n// Icones\r\n//\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n// \r\n// Nossos importes\r\n//\r\nimport useStyles from \"../../theme\";\r\nimport { Actions } from \"../../utilitarios/GeneralUtilities\";\r\n\r\nexport default function ConfiguracoesLista(props) {\r\n\r\n    //\r\n    // Crio o tema da aplicacao, cores, fontes etc\r\n    //    \r\n    const classes = useStyles();\r\n\r\n    const [speedDialOpen, setSpeedDialOpen] = React.useState(false);\r\n\r\n    return (\r\n        <div style={{ display: (props.action == Actions.LIST ? \"block\" : \"none\") }}>\r\n            <SpeedDial\r\n                ariaLabel=\"actions\"\r\n                className={classes.speedDial}\r\n                icon={<SpeedDialIcon />}\r\n                direction=\"left\"\r\n                open={speedDialOpen}\r\n                //hidden={speedDialHidden}\r\n                onOpen={() => setSpeedDialOpen(false)}\r\n                onClose={() => setSpeedDialOpen(false)}\r\n                onClick={!props.disabled && props.addClick}\r\n            >\r\n            </SpeedDial>\r\n            <Menu\r\n                anchorEl={props.menuActionAnchorRef}\r\n                open={Boolean(props.menuActionAnchorRef)}\r\n                onClose={props.menuActionClose}\r\n                value={props.menuActionAnchorRef}\r\n                keepMounted\r\n            >\r\n                <MenuItem onClick={props.viewClick}>Visualizar</MenuItem>\r\n                <MenuItem onClick={props.editClick}>Editar</MenuItem>\r\n                <MenuItem onClick={props.deleteClick}>Excluir</MenuItem>\r\n                {/* <MenuItem onClick={props.printClick}>Imprimir</MenuItem> */}\r\n            </Menu>\r\n            <Grid container >\r\n                <Grid item xs={2}>\r\n                    <TextField\r\n                        variant=\"standard\"\r\n                        label=\"Buscar por\"\r\n                        onChange={props.filterChange}\r\n                    />\r\n                    <Tooltip title=\"Filtrar\">\r\n                        <IconButton\r\n                            aria-label=\"Filtrar\"\r\n                            onClick={props.filterClick}\r\n                        >\r\n                            <FilterListIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <TableContainer className={classes.container}>\r\n                <Table size=\"small\" stickyHeader>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ width: 1, display: 'none' }}\r\n                            >\r\n                                Id\r\n                            </TableCell>\r\n                            <TableCell\r\n                                style={{ width: 1, display: 'none' }}\r\n                            >\r\n                                Filial\r\n                            </TableCell>\r\n                            <TableCell\r\n                                style={{ width: 10 }}\r\n                            >\r\n                                Código\r\n                            </TableCell>\r\n                            <TableCell\r\n                                style={{ width: 10 }}\r\n                            >\r\n                                Nome\r\n                            </TableCell>\r\n                            <TableCell\r\n                            // style={{ width: 10 }}\r\n                            >\r\n                                Descrição\r\n                            </TableCell>\r\n                            <TableCell\r\n                                style={{ width: 10 }}\r\n                            >\r\n                                Valor\r\n                            </TableCell>\r\n                            <TableCell\r\n                                align=\"center\"\r\n                                style={{ width: 60 }}\r\n                            >\r\n                                Ação\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.data.map(row => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell\r\n                                    style={{ width: 10, display: 'none' }}\r\n                                >\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ width: 10, display: 'none' }}\r\n                                >\r\n                                    {row.filial}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ width: 10 }}\r\n                                >\r\n                                    {row.codigo}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ width: 10 }}\r\n                                >\r\n                                    {row.nome}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                // style={{ width: 10 }}\r\n                                >\r\n                                    {row.descricao}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ width: 10 }}\r\n                                >\r\n                                    {row.valor}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ width: 1 }}\r\n                                >\r\n                                    <IconButton\r\n                                        aria-label=\"Ações\"\r\n                                        onClick={props.menuActionClick}\r\n                                        disabled={!props.disabled ? props.loading : props.disabled}\r\n                                    >\r\n                                        <MoreVertIcon />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                component=\"div\"\r\n                labelRowsPerPage=\"Linhas por Pagina\"\r\n                rowsPerPageOptions={[10, 25, 50, 100]}\r\n                //rowsPerPageOptions=\"\"\r\n                //labelRowsPerPage=\"\"\r\n                //labelDisplayedRows={null}\r\n                page={props.page}\r\n                count={props.totalRows}\r\n                rowsPerPage={props.rowsPerPage}\r\n                onChangePage={props.changePage}\r\n                onChangeRowsPerPage={props.changeRowsPerPage}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Typography,\r\n  Toolbar,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//\r\n// Outros importações\r\n// \r\nimport useStyles from \"../../theme\";\r\n\r\nimport ConfiguracoesDetalhe from \"./configuracoes-detalhes\";\r\nimport ConfiguracoesLista from \"./configuracoes-lista\";\r\n\r\nimport { Actions } from \"../../utilitarios/GeneralUtilities\";\r\nimport KSnackBar from \"../../components/ksnackbar\";\r\nimport ApiUtilities from \"../../utilitarios/ApiUtilities\";\r\n\r\n\r\nexport default function Configuracoes(props) {\r\n\r\n  //\r\n  // Crio o tema da aplicacao, cores, fontes etc\r\n  //\r\n  const classes = useStyles();\r\n\r\n  const service = props.config.service + \"parametro\";\r\n\r\n  //\r\n  // Definição das variaveis usando(react-hook)\r\n  //\r\n  const [action, setAction] = useState(Actions.LIST); // Variavel para controle da acao que ocorre na tela\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null); // Uso isso para andescricaoar o menu popup do botao editar a um botao EDITAR\r\n\r\n  const [snackBarOpen, setSnackBarOpen] = useState({ // variavel para controlar a caixa de mensagem, para quando ocorre algum alerta\r\n    open: false,\r\n    message: \"\"\r\n  });\r\n\r\n  const [inputValues, setInputValues] = useState({ // Rook para controle dos inputs na tela\r\n    id: 0,\r\n    filial: 0,\r\n    codigo: 0,\r\n    nome: \"\",\r\n    descricao: \"\",\r\n    valor: \"\" ,\r\n    // inativo: false\r\n  });\r\n\r\n  const [data, setData] = React.useState([]); // Variavel que mantem a lista de dados\r\n\r\n  const [disabled, setDisabled] = React.useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //\r\n  // Controle da paginacao\r\n  //\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [totalRows, setTotalRows] = React.useState(0);\r\n\r\n  const [filter, setFilter] = React.useState(\"\");\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  // INICIO: EVENTOS DA TELA\r\n\r\n  //\r\n  // Chamada para atualizar lista de dados, toda vez que algo muda\r\n  //\r\n  useEffect(() => {\r\n    list(page, rowsPerPage);\r\n  }, [setData]);\r\n\r\n  //\r\n  // Evento para novo registro\r\n  //\r\n  const addHandleClick = (event) => {\r\n\r\n    setInputValues({\r\n      id: 0,\r\n      filial: 0,\r\n      codigo: 0,\r\n      nome: \"\",\r\n      descricao: \"\",\r\n      valor: \"\" ,\r\n      // inativo: false\r\n    });\r\n\r\n    setAction(Actions.ADD);\r\n\r\n    setDisabled(false);\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n //\r\n  // Logica do botao EDITAR\r\n  //\r\n  const editHandleClick = (event) => {\r\n\r\n    find(Actions.UPDATE);\r\n\r\n    setAnchorEl(null);\r\n\r\n    //setDisabled(false);\r\n  };\r\n\r\n  //\r\n  // Logica do botao EXCLUIR\r\n  //\r\n  const deleteHandleClick = (event) => {\r\n\r\n    find(Actions.DELETE);\r\n\r\n    setAnchorEl(null);\r\n\r\n    setDisabled(true);\r\n  }\r\n\r\n  //\r\n  // Logica para VISUALIZAR\r\n  //\r\n  const viewHandleClick = (event) => {\r\n    \r\n    find(Actions.VIEW);\r\n\r\n    setAnchorEl(null);\r\n\r\n    setDisabled(true);\r\n  }\r\n\r\n  //\r\n  // Evento quando se tenta persistir um registro, quando-se clica no ok da tela\r\n  //\r\n  const okHandleClick = (event) => {\r\n    confirm();\r\n  }\r\n\r\n  //\r\n  // Evento para o botao fechar da tela\r\n  // \r\n  const closeHandleClick = () => {\r\n    list(page, rowsPerPage);\r\n\r\n    setAction(Actions.LIST);\r\n  }\r\n\r\n  // FIM: EVENTOS DA TELA\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  // FUNCOES UTILITARIAS\r\n\r\n  //\r\n  // Rotina carrega os dados a partir do back-end\r\n  //\r\n  async function confirm() {\r\n\r\n    setLoading(true);\r\n\r\n    let method = \"POST\";\r\n\r\n    if (action == Actions.UPDATE) {\r\n      method = \"PUT\";\r\n\r\n    } else if (action == Actions.DELETE) {\r\n      method = \"DELETE\";\r\n    }\r\n\r\n    await ApiUtilities.fetch(service, inputValues, method)\r\n      .then((res) => {\r\n        res.json().then((res) => {\r\n\r\n          //Caso de tudo certo atualizo a lista\r\n          if (res.Code === 200) {\r\n\r\n            if (action == Actions.ADD) {\r\n\r\n              setInputValues({\r\n                id: 0,\r\n                filial: 0,\r\n                codigo: 0,\r\n                nome: \"\",\r\n                descricao: \"\",\r\n                valor: \"\" ,\r\n                // inativo: false\r\n              });\r\n\r\n              setSnackBarOpen({\r\n                open: true,\r\n                message: res.Message\r\n                // message: \"Operação executada com sucesso\"\r\n              });\r\n\r\n            } else {\r\n\r\n              list(page, rowsPerPage);\r\n\r\n              setAction(Actions.LIST);\r\n\r\n            }\r\n\r\n            setSnackBarOpen({\r\n              open: true,\r\n              message: res.Message\r\n            });\r\n\r\n            //Caso contrario exibo a mensagem de erro\r\n          } else {\r\n            setSnackBarOpen({\r\n              open: true,\r\n              message: res.Message\r\n            });\r\n          }\r\n\r\n          setLoading(false);\r\n        })\r\n      }).catch((error) => {\r\n        setSnackBarOpen({\r\n          open: true,\r\n          message: \"Erro de comunicação: \" + error.message\r\n        });\r\n\r\n        setLoading(false);\r\n      });\r\n  }\r\n  \r\n  async function list(page, rowsPerPage) {\r\n\r\n    setLoading(true);\r\n\r\n    setDisabled(false);\r\n\r\n    await ApiUtilities.fetch(service, {page: page , limit: rowsPerPage , filter: filter, order: \"SYSAH_NOME\"}, \"GET\")\r\n      .then((res) => {\r\n        res.json().then((res) => {\r\n\r\n          //Caso de tudo certo atualizo a lista\r\n          if (res.Code === 200) {\r\n\r\n            setData(res.Content.rows);\r\n\r\n            setTotalRows(res.Content.totalRows);\r\n\r\n            setPage(page);\r\n\r\n            setRowsPerPage(rowsPerPage);\r\n\r\n            //Caso contrario exibo a mensagem de erro\r\n          } else {\r\n            setSnackBarOpen({\r\n              open: true,\r\n              message: res.Message\r\n            });\r\n          }\r\n\r\n          setLoading(false);\r\n        })\r\n      }).catch((error) => {\r\n        setSnackBarOpen({\r\n          open: true,\r\n          message: \"Erro de comunicação: \" + error.message\r\n        });\r\n\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  async function find(action) {\r\n\r\n    setLoading(true);\r\n\r\n    let id = anchorEl.parentElement.parentElement.cells[0].innerText;\r\n\r\n    ApiUtilities.fetch(service + \"/find\", { id: id }, \"GET\")\r\n    .then((res) => {\r\n      res.json().then((res) => {\r\n\r\n        //Caso de tudo certo atualizo a lista\r\n        if (res.Code === 200) {\r\n\r\n          let model = res.Content;\r\n\r\n          setInputValues({\r\n            id: model.id || \"\",\r\n            filial: model.filial || 0,\r\n            codigo: model.codigo || 0,\r\n            nome: model.nome || \"\",\r\n            descricao: model.descricao || \"\",\r\n            valor: model.valor || 0,\r\n            // inativo: model.inativo\r\n          });\r\n\r\n          setAction(action);\r\n\r\n          //Caso contrario exibo a mensagem de erro\r\n        } else {\r\n          setSnackBarOpen({\r\n            open: true,\r\n            message: res.Message\r\n          });\r\n        }\r\n\r\n        // setDisabled(false);\r\n        setLoading(false);\r\n      })\r\n    }).catch((error) => {\r\n      setSnackBarOpen({\r\n        open: true,\r\n        message: \"Erro de comunicação: \" + error.message\r\n      });\r\n\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.paper}>\r\n        <Toolbar>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n            color=\"primary\"\r\n          >\r\n            {props.title}\r\n          </Typography>\r\n        </Toolbar>\r\n\r\n        <ConfiguracoesLista\r\n          action={action}\r\n          data={data}\r\n          menuActionAnchorRef={anchorEl}\r\n          menuActionClick={(event) => { setAnchorEl(event.currentTarget) }}\r\n          menuActionClose={(event) => { setAnchorEl(null) }}\r\n          addClick={addHandleClick}\r\n          editClick={editHandleClick}\r\n          deleteClick={deleteHandleClick}\r\n          viewClick={viewHandleClick}\r\n          disabled={disabled}\r\n          loading={loading}\r\n          filterClick={() => { list(page, rowsPerPage); }}\r\n          filterChange={(event) => { setFilter(event.target.value) }}\r\n          page={page}\r\n          totalRows={totalRows}\r\n          rowsPerPage={rowsPerPage}\r\n          changePage={(event, newPage) => { list(newPage, rowsPerPage); }}\r\n          changeRowsPerPage={(event) => { list(0, parseInt(event.target.value)); }}\r\n        />\r\n\r\n        <ConfiguracoesDetalhe\r\n          action={action}\r\n          inputValues={inputValues}\r\n          setInputValues={setInputValues}\r\n          okClick={okHandleClick}\r\n          cancelClick={closeHandleClick}\r\n          disabled={disabled}\r\n          loading={loading}\r\n        />\r\n        <br />\r\n        {loading && <LinearProgress />}\r\n      </Paper>\r\n\r\n      <KSnackBar\r\n        options={[snackBarOpen, setSnackBarOpen]}\r\n      />\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\n\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport {\r\n  Typography,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  CssBaseline,\r\n  Toolbar,\r\n  AppBar,\r\n  ListSubheader,\r\n  IconButton,\r\n  Badge,\r\n  Drawer,\r\n  Avatar,\r\n  Divider,\r\n  List,\r\n  Container,\r\n  Tooltip,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Button,\r\n  Box\r\n} from \"@material-ui/core\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport ControlPointIcon from \"@material-ui/icons/ControlPoint\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\n\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n//import Title from \"./Title\";\r\n\r\n// function MainListItems() {\r\n//   return (\r\n//     <div>\r\n//       <ListItem button component={Link} to=\"/main\">\r\n//         <ListItemIcon>\r\n//           <DashboardIcon />\r\n//         </ListItemIcon>\r\n//         <ListItemText primary=\"Visão Geral\" />\r\n//       </ListItem>\r\n//       <ListItem button>\r\n//         <ListItemIcon>\r\n//           <SettingsIcon />\r\n//         </ListItemIcon>\r\n//         <ListItemText primary=\"Configurações\" />\r\n//       </ListItem>\r\n//       <ListItem button component={Link} to=\"/users\">\r\n//         <ListItemIcon>\r\n//           <PeopleIcon />\r\n//         </ListItemIcon>\r\n//         <ListItemText primary=\"Usuários\" />\r\n//       </ListItem>\r\n//       {/* <ListItem button>\r\n//         <ListItemIcon>\r\n//           <ShoppingCartIcon />\r\n//         </ListItemIcon>\r\n//         <ListItemText primary=\"Orders\" />\r\n//       </ListItem>\r\n//       <ListItem button>\r\n//         <ListItemIcon>\r\n//           <BarChartIcon />\r\n//         </ListItemIcon>\r\n//         <ListItemText primary=\"Reports\" />\r\n//       </ListItem>\r\n//       <ListItem button>\r\n//         <ListItemIcon>\r\n//           <LayersIcon />\r\n//         </ListItemIcon>\r\n//         <ListItemText primary=\"Integrations\" />\r\n//       </ListItem> */}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// function SecondaryListItems() {\r\n//   return (\r\n//     <div>\r\n//       <ListSubheader inset>Saved reports</ListSubheader>\r\n//       <ListItem button>\r\n//         <ListItemIcon>{/* <AssignmentIcon /> */}</ListItemIcon>\r\n//         <ListItemText primary=\"Current month\" />\r\n//       </ListItem>\r\n//       <ListItem button>\r\n//         <ListItemIcon>{/* <AssignmentIcon /> */}</ListItemIcon>\r\n//         <ListItemText primary=\"Last quarter\" />\r\n//       </ListItem>\r\n//       <ListItem button>\r\n//         <ListItemIcon>{/* <AssignmentIcon /> */}</ListItemIcon>\r\n//         <ListItemText primary=\"Year-end sale\" />\r\n//       </ListItem>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const rows = [\r\n//   createData(\r\n//     0,\r\n//     \"16 Mar, 2019\",\r\n//     \"Elvis Presley\",\r\n//     \"Tupelo, MS\",\r\n//     \"VISA ⠀•••• 3719\",\r\n//     312.44\r\n//   ),\r\n//   createData(\r\n//     1,\r\n//     \"16 Mar, 2019\",\r\n//     \"Paul McCartney\",\r\n//     \"London, UK\",\r\n//     \"VISA ⠀•••• 2574\",\r\n//     866.99\r\n//   ),\r\n//   createData(\r\n//     2,\r\n//     \"16 Mar, 2019\",\r\n//     \"Tom Scholz\",\r\n//     \"Boston, MA\",\r\n//     \"MC ⠀•••• 1253\",\r\n//     100.81\r\n//   ),\r\n//   createData(\r\n//     3,\r\n//     \"16 Mar, 2019\",\r\n//     \"Michael Jackson\",\r\n//     \"Gary, IN\",\r\n//     \"AMEX ⠀•••• 2000\",\r\n//     654.39\r\n//   ),\r\n//   createData(\r\n//     4,\r\n//     \"15 Mar, 2019\",\r\n//     \"Bruce Springsteen\",\r\n//     \"Long Branch, NJ\",\r\n//     \"VISA ⠀•••• 5919\",\r\n//     212.79\r\n//   )\r\n// ];\r\n\r\n// function createData(id, date, name, shipTo, paymentMethod, amount) {\r\n//   return { id, date, name, shipTo, paymentMethod, amount };\r\n// }\r\n\r\n// const drawerWidth = 240;\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//   root: {\r\n//     display: \"flex\"\r\n//   },\r\n//   toolbar: {\r\n//     paddingRight: 24 // keep right padding when drawer closed\r\n//   },\r\n//   toolbarIcon: {\r\n//     display: \"flex\",\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"flex-end\",\r\n//     padding: \"0 8px\",\r\n//     ...theme.mixins.toolbar\r\n//   },\r\n//   appBar: {\r\n//     zIndex: theme.zIndex.drawer + 1,\r\n//     transition: theme.transitions.create([\"width\", \"margin\"], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen\r\n//     })\r\n//   },\r\n//   appBarShift: {\r\n//     marginLeft: drawerWidth,\r\n//     width: `calc(100% - ${drawerWidth}px)`,\r\n//     transition: theme.transitions.create([\"width\", \"margin\"], {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.enteringScreen\r\n//     })\r\n//   },\r\n//   menuButton: {\r\n//     marginRight: 36\r\n//   },\r\n//   menuButtonHidden: {\r\n//     display: \"none\"\r\n//   },\r\n//   title: {\r\n//     flexGrow: 1,\r\n//     marginLeft: theme.spacing(-2)\r\n//   },\r\n//   drawerPaper: {\r\n//     position: \"relative\",\r\n//     whiteSpace: \"nowrap\",\r\n//     width: drawerWidth,\r\n//     transition: theme.transitions.create(\"width\", {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.enteringScreen\r\n//     })\r\n//   },\r\n//   drawerPaperClose: {\r\n//     overflowX: \"hidden\",\r\n//     transition: theme.transitions.create(\"width\", {\r\n//       easing: theme.transitions.easing.sharp,\r\n//       duration: theme.transitions.duration.leavingScreen\r\n//     }),\r\n//     width: theme.spacing(7),\r\n//     [theme.breakpoints.up(\"sm\")]: {\r\n//       width: theme.spacing(9)\r\n//     }\r\n//   },\r\n//   appBarSpacer: theme.mixins.toolbar,\r\n//   content: {\r\n//     flexGrow: 1,\r\n//     height: \"100vh\",\r\n//     overflow: \"auto\"\r\n//   },\r\n//   container: {\r\n//     paddingTop: theme.spacing(4),\r\n//     paddingBottom: theme.spacing(4)\r\n//   },\r\n//   paper: {\r\n//     padding: theme.spacing(2),\r\n//     display: \"flex\",\r\n//     overflow: \"auto\",\r\n//     flexDirection: \"column\"\r\n//   },\r\n//   fixedHeight: {\r\n//     height: 240\r\n//   },\r\n//   avatar: {\r\n//     alignItems: \"center\",\r\n//     marginTop: theme.spacing(1),\r\n//     marginLeft: theme.spacing(1),\r\n//     marginBottom: theme.spacing(2)\r\n//   },\r\n\r\n//   addButton: {\r\n//     marginRight: theme.spacing(-3)\r\n//   },\r\n//   submit: {\r\n//     margin: theme.spacing(3, 1, 2)\r\n//   }\r\n// }));\r\n\r\nimport useStyles from \"../theme\";\r\n\r\nexport default function VisaoGeral(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.paper}>\r\n        <Toolbar>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n            color=\"primary\"\r\n          >\r\n            {props.title}\r\n          </Typography>\r\n        </Toolbar>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport useStyles from \"../../theme\";\r\n\r\nimport { Box, Grid, TextField, Paper, Table, TableHead, TableCell, TableBody, TableRow, Button, Select, InputLabel, FormControl, FormLabel, LinearProgress } from \"@material-ui/core\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nimport { Actions } from \"../../utilitarios/GeneralUtilities\";\r\n\r\nexport default function UsuariosDetalhe(props) {\r\n\r\n    //\r\n    // Crio o tema da aplicacao, cores, fontes etc\r\n    //    \r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            style={{ display: (props.action == Actions.ADD || props.action == Actions.UPDATE || props.action == Actions.DELETE || props.action == Actions.VIEW ? \"block\" : \"none\") }}>\r\n            <Grid container spacing={4}>\r\n                <Grid item xs={12} sm={2}>\r\n                    <TextField\r\n                        label=\"Código\"\r\n                        onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"codigo\"]: event.target.value })}}\r\n                        value={props.inputValues.codigo}\r\n                        variant=\"standard\"\r\n                        fullWidth\r\n                        disabled\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={2}>\r\n                    <TextField\r\n                        label=\"Número\"\r\n                        onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"numero\"]: event.target.value })}}\r\n                        value={props.inputValues.numero}\r\n                        variant=\"standard\"\r\n                        fullWidth\r\n                        disabled\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={2}>\r\n                    <TextField\r\n                        label=\"Id Agente\"\r\n                        onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"agenteId\"]: event.target.value })}}\r\n                        value={props.inputValues.agenteId}\r\n                        variant=\"standard\"\r\n                        fullWidth\r\n                        disabled={props.action == Actions.DELETE ? true : !props.disabled ? props.loading : props.disabled}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                 \r\n\r\n                <Grid item xs={12} sm={3}>\r\n                    <TextField\r\n                        label=\"Usuario\"\r\n                        onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"usuario\"]: event.target.value })}}\r\n                        value={props.inputValues.usuario}\r\n                        variant=\"standard\"\r\n                        fullWidth\r\n                        disabled\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        // disabled={props.action == Actions.DELETE ? true : !props.disabled ? props.loading : props.disabled}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={3}>\r\n                    <TextField\r\n                        label=\"Senha\"\r\n                        onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"senha\"]: event.target.value })}}\r\n                        value={props.inputValues.senha}\r\n                        variant=\"standard\"\r\n                        fullWidth\r\n                        disabled={props.action == Actions.DELETE ? true : !props.disabled ? props.loading : props.disabled}\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </Grid>   \r\n\r\n                <Grid item xs={12} sm={4}>\r\n                    <TextField\r\n                        label=\"Equipe\"\r\n                        onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"equipe\"]: event.target.value })}}\r\n                        value={props.inputValues.equipe}\r\n                        variant=\"standard\"\r\n                        fullWidth\r\n                        disabled\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </Grid>\r\n                \r\n                 <Grid item xs={12} sm={8}>\r\n                    <TextField\r\n                        label=\"Email\"\r\n                        onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"email\"]: event.target.value })}}\r\n                        value={props.inputValues.email}\r\n                        variant=\"standard\"\r\n                        fullWidth\r\n                        disabled\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                    />\r\n                </Grid>    \r\n\r\n                {/* <Grid item xs={12} sm={12}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"participaRoleta\"]: event.target.checked })}}\r\n                                checked={props.inputValues.participaRoleta}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Participa da Roleta\"\r\n                        disabled={props.action == Actions.DELETE ? true : !props.disabled ? props.loading : props.disabled}\r\n                    />\r\n                </Grid> */}\r\n\r\n                {/* <Grid item xs={12} sm={3}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"funilAnhang\"]: event.target.checked })}}\r\n                                checked={props.inputValues.funilAnhang}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Anhanguera\"\r\n                        disabled={props.action == Actions.DELETE ? true : !props.disabled ? props.loading : props.disabled}\r\n                    />\r\n                </Grid> */}\r\n\r\n                <Grid item xs={12} sm={3}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                onChange={(event) => {props.setInputValues({ ...props.inputValues, [\"inativo\"]: event.target.checked })}}\r\n                                checked={props.inputValues.inativo}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Inativo\"\r\n                        disabled={props.action == Actions.DELETE ? true : !props.disabled ? props.loading : props.disabled}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid container justify=\"flex-end\">\r\n                    <Grid item>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={props.okClick}\r\n                            disabled={!props.disabled ? props.loading : props.action == Actions.DELETE ? props.loading : props.disabled}\r\n                        >\r\n                            OK\r\n                        </Button>\r\n                        <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={props.cancelClick}\r\n                            disabled={props.loading}\r\n                        >\r\n                            Cancelar\r\n                    </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        </div >\r\n    );\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n//\r\n// Imports MATERIAL-UI\r\n//\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nimport {    \r\n    IconButton,    \r\n    Tooltip,\r\n    TextField,    \r\n    MenuItem,\r\n    Menu,\r\n    Chip,\r\n    TableContainer,\r\n    TablePagination, Grid\r\n} from \"@material-ui/core\";\r\n\r\n//\r\n// Icones\r\n//\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\r\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\n\r\n// \r\n// Nossos importes\r\n//\r\nimport useStyles from \"../../theme\";\r\nimport { Actions } from \"../../utilitarios/GeneralUtilities\";\r\n\r\nexport default function UsuariosLista(props) {\r\n\r\n    //\r\n    // Crio o tema da aplicacao, cores, fontes etc\r\n    //    \r\n    const classes = useStyles();\r\n\r\n    const [speedDialOpen, setSpeedDialOpen] = React.useState(false);\r\n\r\n    return (\r\n        <div style={{ display: (props.action == Actions.LIST ? \"block\" : \"none\") }}>\r\n            {/* <SpeedDial\r\n                ariaLabel=\"actions\"\r\n                className={classes.speedDial}\r\n                icon={<SpeedDialIcon />}\r\n                direction=\"left\"\r\n                open={speedDialOpen}\r\n                //hidden={speedDialHidden}\r\n                onOpen={() => setSpeedDialOpen(false)}\r\n                onClose={() => setSpeedDialOpen(false)}\r\n                onClick={props.addClick}\r\n            >\r\n            </SpeedDial> */}\r\n            <Menu\r\n                anchorEl={props.menuActionAnchorRef}\r\n                open={Boolean(props.menuActionAnchorRef)}\r\n                onClose={props.menuActionClose}\r\n                value={props.menuActionAnchorRef}\r\n                keepMounted\r\n            >\r\n                <MenuItem onClick={props.viewClick}>Visualizar</MenuItem>\r\n                <MenuItem onClick={props.editClick}>Editar</MenuItem>\r\n                {/* <MenuItem onClick={props.deleteClick}>Excluir</MenuItem> */}\r\n                {/* <MenuItem onClick={props.printClick}>Imprimir</MenuItem> */}\r\n            </Menu>\r\n            <Grid container >\r\n                <Grid item xs={2}>\r\n                    <TextField\r\n                        variant=\"standard\"\r\n                        label=\"Buscar por\"\r\n                        onChange={props.filterChange}\r\n                    />\r\n                    <Tooltip title=\"Filtrar\">\r\n                        <IconButton\r\n                            aria-label=\"Filtrar\"\r\n                            onClick={props.filterClick}\r\n                        >\r\n                            <FilterListIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                </Grid>\r\n            </Grid>\r\n            <br />\r\n            <TableContainer className={classes.container}>\r\n                <Table size=\"small\" stickyHeader>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell\r\n                                style={{ width: 1, display: 'none' }}\r\n                            >\r\n                                Id\r\n                            </TableCell>\r\n                            <TableCell\r\n                                style={{ width: 1, display: 'none' }}\r\n                            >\r\n                                Filial\r\n                            </TableCell>\r\n                            <TableCell\r\n                                style={{ width: 10 }}\r\n                            >\r\n                                Código\r\n                            </TableCell>\r\n                            <TableCell\r\n                                style={{ width: 10 }}\r\n                            >\r\n                                Número\r\n                            </TableCell>\r\n                            <TableCell\r\n                                style={{ width: 10}}\r\n                            >\r\n                                Id Agente\r\n                            </TableCell>\r\n                            <TableCell\r\n                                style={{ width: 10 }}\r\n                            >\r\n                                Equipe\r\n                            </TableCell>\r\n                            <TableCell\r\n                            // style={{ width: 10 }}\r\n                            >\r\n                                Usuário\r\n                            </TableCell>\r\n                            <TableCell\r\n                            // style={{ width: 10 }}\r\n                            >\r\n                                Email\r\n                            </TableCell>\r\n                           \r\n                            {/* <TableCell\r\n                            style={{ width: 30 }}\r\n                            >\r\n                                Part. Roleta\r\n                            </TableCell>                            */}\r\n                            <TableCell\r\n                                align=\"center\"\r\n                                style={{ width: 1 }}\r\n                            >\r\n                                Inativo\r\n                            </TableCell>\r\n                            <TableCell\r\n                                align=\"center\"\r\n                                style={{ width: 1 }}\r\n                            >\r\n                                Ação\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        {props.data.map(row => (\r\n                            <TableRow key={row.id}>\r\n                                <TableCell\r\n                                    style={{ width: 10, display: 'none' }}\r\n                                >\r\n                                    {row.id}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ width: 10, display: 'none' }}\r\n                                >\r\n                                    {row.filial}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ width: 10 }}\r\n                                >\r\n                                    {row.codigo}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ width: 10 }}\r\n                                >\r\n                                    {row.numero}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ width: 10 }}\r\n                                >\r\n                                    {row.agenteId}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    style={{ width: 10 }}\r\n                                >\r\n                                    {row.equipe}\r\n                                </TableCell>\r\n                                <TableCell\r\n                                // style={{ width: 10 }}\r\n                                >\r\n                                    {row.usuario}\r\n                                </TableCell> \r\n                                <TableCell\r\n                                // style={{ width: 10 }}\r\n                                >\r\n                                    {row.email}\r\n                                </TableCell>   \r\n                               \r\n                                <TableCell\r\n                                    style={{ width: 1 }}\r\n                                >\r\n                                    <Chip\r\n                                        size=\"small\"\r\n                                        label={row.inativo ? \"Sim\" : \"Não\"}\r\n                                        color={row.inativo ? \"secondary\" : \"default\"}\r\n                                    />\r\n                                </TableCell>\r\n                                <TableCell\r\n                                    align=\"center\"\r\n                                    style={{ width: 1 }}\r\n                                >\r\n                                    <IconButton\r\n                                        aria-label=\"Ações\"\r\n                                        onClick={props.menuActionClick}\r\n                                        disabled={!props.disabled ? props.loading : props.disabled}\r\n                                    >\r\n                                        <MoreVertIcon />\r\n                                    </IconButton>\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                component=\"div\"\r\n                labelRowsPerPage=\"Linhas por Pagina\"\r\n                rowsPerPageOptions={[10, 25, 50, 100]}\r\n                page={props.page}\r\n                count={props.totalRows}\r\n                rowsPerPage={props.rowsPerPage}\r\n                onChangePage={props.changePage}\r\n                onChangeRowsPerPage={props.changeRowsPerPage}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  Typography,\r\n  Toolbar,\r\n  LinearProgress,\r\n} from \"@material-ui/core\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n//\r\n// Outros importações\r\n// \r\nimport useStyles from \"../../theme\";\r\n\r\nimport UsuariosDetalhe from \"./usuarios-detalhes\";\r\nimport UsuariosLista from \"./usuarios-lista\";\r\n\r\nimport { Actions } from \"../../utilitarios/GeneralUtilities\";\r\nimport KSnackBar from \"../../components/ksnackbar\";\r\nimport ApiUtilities from \"../../utilitarios/ApiUtilities\";\r\n\r\nexport default function Usuarios(props) {\r\n\r\n  let debug = \"XDEBUG_SESSION_START=netbeans-xdebug\";\r\n\r\n  //\r\n  // Crio o tema da aplicacao, cores, fontes etc\r\n  //\r\n  const classes = useStyles();\r\n\r\n  const service = props.config.service + \"usuario\"\r\n\r\n  //\r\n  // Definição das variaveis usando(react-hook)\r\n  //\r\n  const [action, setAction] = useState(Actions.LIST); // Variavel para controle da acao que ocorre na tela\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null); // Uso isso para andescricaoar o menu popup do botao editar a um botao EDITAR\r\n\r\n  const [snackBarOpen, setSnackBarOpen] = useState({ // variavel para controlar a caixa de mensagem, para quando ocorre algum alerta\r\n    open: false,\r\n    message: \"\"\r\n  });\r\n\r\n  const [inputValues, setInputValues] = useState({ // Rook para controle dos inputs na tela\r\n    id: 0,\r\n    filial: 0,\r\n    codigo: 0,\r\n    numero: 0,\r\n    usuario: \"\",\r\n    agenteId: \"\",\r\n    senha: \"\",\r\n    funil: \"\",\r\n    equipe: \"\",\r\n    participaRoleta: false,\r\n    gerente: false,\r\n    inativo: false\r\n  });\r\n\r\n  const [data, setData] = React.useState([]); // Variavel que mantem a lista de dados\r\n\r\n  const [disabled, setDisabled] = React.useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //\r\n  // Controle da paginacao\r\n  //\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const [totalRows, setTotalRows] = React.useState(0);\r\n\r\n  const [filter, setFilter] = React.useState(\"\");\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  // INICIO: EVENTOS DA TELA\r\n\r\n  //\r\n  // Chamada para atualizar lista de dados, toda vez que algo muda\r\n  //\r\n  useEffect(() => {\r\n    list(page, rowsPerPage);\r\n  }, [setData]);\r\n\r\n  //\r\n  // Evento para novo registro\r\n  //\r\n  const addHandleClick = (event) => {\r\n\r\n    setDisabled(false);\r\n\r\n    setInputValues({\r\n      id: 0,\r\n      filial: 0,\r\n      codigo: 0,\r\n      numero: 0,\r\n      usuario: \"\",\r\n      agenteId: \"\",\r\n      senha: \"\",\r\n      funil: \"\",\r\n      equipe: \"\",\r\n      participaRoleta: false,\r\n      gerente: false,\r\n      inativo: false\r\n    });\r\n\r\n    setAction(Actions.ADD);\r\n\r\n    setDisabled(false);\r\n\r\n    setLoading(false);\r\n  }\r\n\r\n  //\r\n  // Logica do botao EDITAR\r\n  //\r\n  const editHandleClick = (event) => {\r\n\r\n    find(Actions.UPDATE);\r\n\r\n    setAnchorEl(null);\r\n\r\n    setDisabled(false);\r\n  };\r\n\r\n  //\r\n  // Logica do botao EXCLUIR\r\n  //\r\n  const deleteHandleClick = (event) => {\r\n    find(Actions.DELETE);\r\n\r\n    setAnchorEl(null);\r\n\r\n    setDisabled(true);\r\n  }\r\n\r\n  //\r\n  // Logica para VISUALIZAR\r\n  //\r\n  const viewHandleClick = (event) => {\r\n    find(Actions.VIEW);\r\n\r\n    setAnchorEl(null);\r\n\r\n    setDisabled(true);\r\n  }\r\n\r\n  //\r\n  // Evento quando se tenta persistir um registro, quando-se clica no ok da tela\r\n  //\r\n  const okHandleClick = (event) => {\r\n    confirm();\r\n  }\r\n\r\n  //\r\n  // Evento para o botao fechar da tela\r\n  // \r\n  const closeHandleClick = () => {\r\n    list(page, rowsPerPage);\r\n\r\n    setAction(Actions.LIST);\r\n  }\r\n\r\n  // FIM: EVENTOS DA TELA\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\n  //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n  // FUNCOES UTILITARIAS\r\n\r\n  //\r\n  // Rotina carrega os dados a partir do back-end\r\n  //\r\n  async function confirm() {\r\n\r\n    setLoading(true);\r\n\r\n    let method = \"POST\";\r\n\r\n    if (action == Actions.UPDATE) {\r\n      method = \"PUT\";\r\n\r\n    } else if (action == Actions.DELETE) {\r\n      method = \"DELETE\";\r\n    }\r\n\r\n    await ApiUtilities.fetch(service, inputValues, method)\r\n      .then((res) => {\r\n        res.json().then((res) => {\r\n\r\n          //Caso de tudo certo atualizo a lista\r\n          if (res.Code === 200) {\r\n\r\n            if (action == Actions.ADD) {\r\n\r\n              setInputValues({\r\n                id: 0,\r\n                filial: 0,\r\n                codigo: 0,\r\n                numero: 0,\r\n                usuario: \"\",\r\n                agenteId: \"\",\r\n                senha: \"\",\r\n                funil:\"\",\r\n                equipe: \"\",\r\n                participaRoleta: false,\r\n                gerente: false,\r\n                inativo: false\r\n              });\r\n\r\n              setSnackBarOpen({\r\n                open: true,\r\n                message: res.Message\r\n                // message: \"Operação executada com sucesso\"\r\n              });\r\n\r\n            } else {\r\n\r\n              list(page, rowsPerPage);\r\n\r\n              setAction(Actions.LIST);\r\n\r\n              setSnackBarOpen({\r\n                open: true,\r\n                message: res.Message\r\n              });\r\n            }\r\n\r\n            //Caso contrario exibo a mensagem de erro\r\n          } else {\r\n            setSnackBarOpen({\r\n              open: true,\r\n              message: res.Message\r\n            });\r\n          }\r\n\r\n          setLoading(false);\r\n        })\r\n      }).catch((error) => {\r\n        setSnackBarOpen({\r\n          open: true,\r\n          message: \"Erro de comunicação: \" + error.message\r\n        });\r\n\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  async function list(page, rowsPerPage) {\r\n\r\n    setLoading(true);\r\n\r\n    setDisabled(false);\r\n\r\n    await ApiUtilities.fetch(service, {page: page , limit : rowsPerPage , filter: filter}, \"GET\")\r\n      .then((res) => {\r\n        res.json().then((res) => {\r\n\r\n          //Caso de tudo certo atualizo a lista\r\n          if (res.Code === 200) {\r\n\r\n            setData(res.Content.rows);\r\n\r\n            setTotalRows(res.Content.totalRows);\r\n\r\n            setPage(page);\r\n\r\n            setRowsPerPage(rowsPerPage);\r\n\r\n            //Caso contrario exibo a mensagem de erro\r\n          } else {\r\n            setSnackBarOpen({\r\n              open: true,\r\n              message: res.Message\r\n            });\r\n          }\r\n\r\n          setLoading(false);\r\n        })\r\n      }).catch((error) => {\r\n        setSnackBarOpen({\r\n          open: true,\r\n          message: \"Erro de comunicação: \" + error.message\r\n        });\r\n\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  async function find(action) {\r\n\r\n    setLoading(true);\r\n\r\n    let id = anchorEl.parentElement.parentElement.cells[0].innerText;\r\n\r\n    ApiUtilities.fetch(service + \"/find\", { id: id }, \"GET\")\r\n      .then((res) => {\r\n        res.json().then((res) => {\r\n\r\n          //Caso de tudo certo atualizo a lista\r\n          if (res.Code === 200) {\r\n\r\n            let model = res.Content;\r\n\r\n            setInputValues({\r\n              id: model.id || \"\",\r\n              filial: model.filial || 0,\r\n              codigo: model.codigo || 0,\r\n              numero: model.numero || 0,\r\n              usuario: model.usuario || \"\",\r\n              agenteId: model.agenteId || \"\",\r\n              email: model.email || \"\",\r\n              equipe: model.equipe || \"\",\r\n              senha: model.senha || \"\",\r\n              participaRoleta: model.participaRoleta || false, \r\n              gerente: model.gerente || false,             \r\n              inativo: model.inativo || false\r\n            });\r\n\r\n            setAction(action);\r\n\r\n            //Caso contrario exibo a mensagem de erro\r\n          } else {\r\n            setSnackBarOpen({\r\n              open: true,\r\n              message: res.Message\r\n            });\r\n          }\r\n\r\n          // setDisabled(false);\r\n\r\n          setLoading(false);\r\n        })\r\n      }).catch((error) => {\r\n        setSnackBarOpen({\r\n          open: true,\r\n          message: \"Erro de comunicação: \" + error.message\r\n        });\r\n\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Paper className={classes.paper}>\r\n        <Toolbar>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n            color=\"primary\"\r\n          >\r\n            {props.title}\r\n          </Typography>\r\n        </Toolbar>\r\n\r\n        <UsuariosLista\r\n          action={action}\r\n          data={data}\r\n          menuActionAnchorRef={anchorEl}\r\n          menuActionClick={(event) => { setAnchorEl(event.currentTarget) }}\r\n          menuActionClose={(event) => { setAnchorEl(null) }}\r\n          addClick={addHandleClick}\r\n          editClick={editHandleClick}\r\n          deleteClick={deleteHandleClick}\r\n          viewClick={viewHandleClick}\r\n          disabled={disabled}\r\n          loading={loading}\r\n          filterClick={() => { list(page, rowsPerPage); }}\r\n          filterChange={(event) => { setFilter(event.target.value) }}\r\n          page={page}\r\n          totalRows={totalRows}\r\n          rowsPerPage={rowsPerPage}\r\n          changePage={(event, newPage) => { list(newPage, rowsPerPage); }}\r\n          changeRowsPerPage={(event) => { list(0, parseInt(event.target.value)); }}\r\n        />\r\n\r\n        <UsuariosDetalhe\r\n          action={action}\r\n          inputValues={inputValues}\r\n          setInputValues={setInputValues}\r\n          okClick={okHandleClick}\r\n          cancelClick={closeHandleClick}\r\n          disabled={disabled}\r\n          loading={loading}\r\n        />\r\n\r\n        {loading && <div> <br /><LinearProgress /> </div>}\r\n\r\n      </Paper>\r\n\r\n      <KSnackBar\r\n        options={[snackBarOpen, setSnackBarOpen]}\r\n      />\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\n// import FormGroup from '@material-ui/core/FormGroup';\r\n\r\nimport {\r\n  Typography,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  CssBaseline,\r\n  Toolbar,\r\n  AppBar,\r\n  ListSubheader,\r\n  IconButton,\r\n  Badge,\r\n  Drawer,\r\n  Avatar,\r\n  Divider,\r\n  List,\r\n  Container,\r\n  Tooltip,\r\n  TextField,\r\n  FormControlLabel,\r\n  FormLabel,\r\n  FormGroup,\r\n  Checkbox,\r\n  Button,\r\n  Box,\r\n  Snackbar,\r\n  ButtonGroup,\r\n  Popper,\r\n  ClickAwayListener,\r\n  Grow,\r\n  MenuItem,\r\n  MenuList,\r\n  Menu,\r\n  Chip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Fab,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  TableContainer,\r\n} from \"@material-ui/core\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport ControlPointIcon from \"@material-ui/icons/ControlPoint\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\n\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nimport useStyles from \"../theme\";\r\n\r\nimport Axios from \"axios\";\r\n\r\nimport NumberUtilities from \"../utils/NumberUtilities\"\r\nimport DateUtilities from \"../utils/DateUtilities\";\r\n\r\n//\r\n//Selecionar os produtos\r\n//\r\nexport default function Formularios(props) {\r\n  \r\n  const [state, setState] = React.useState({\r\n    brises: false,\r\n    acm: false,\r\n    pisoElevado: false,\r\n    forro: false,\r\n    brisePVC: false,\r\n    piso: false,\r\n    carpete: false,\r\n    drywall: false,\r\n    reforma: false,\r\n    estruturaMetalica: false,\r\n    projeto: false,\r\n    moveisCorporativos: false,\r\n    divisoriasDPT: false,\r\n    outros: false,\r\n  });\r\n\r\n  //\r\n  // Crio o tema da aplicacao, cores, fontes etc\r\n  //\r\n  const classes = useStyles();\r\n\r\n  //\r\n  // Acoes possiveis em uma tela\r\n  //\r\n  const Actions = {\r\n    LIST: 0, //Lista de dados\r\n    ADD: 1, //Grava um registro\r\n    UPDATE: 2, //Atualiza um registro\r\n    DELETE: 3 //Excluir um registro\r\n  };\r\n\r\n  //\r\n  //\r\n  //\r\n  const [action, setAction] = useState(0); // Variavel para controle da acao que ocorre na tela\r\n  const [openDialog, setOpenDialog] = useState(false); // para o controle da dialog\r\n  const [openDialogKey, setOpenDialogKey] = useState(); // para o controle da dialog\r\n  const [data, setData] = useState([]); // Variavel que mantem a lista de dados\r\n  const [snackBarOpen, setSnackBarOpen] = useState({ open: false, message: \"\" }); // Isso controla a caixa de mensagem, para quando ocorre um erro\r\n  const [anchorEl, setAnchorEl] = useState(null); // Uso isso para ancorar o menu popup do botao editar a um botao EDITAR\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  //\r\n  // Aqui controlamos todos os inputs da tela\r\n  //\r\n  const [inputValues, setInputValues] = useState({\r\n    id: 0,\r\n    filial: 0,\r\n    codigo: 0,\r\n    nome: \"\",\r\n    sobrenome: \"\",\r\n    empresa: \"\",\r\n    email: \"\",\r\n    celular: \"\",\r\n    fixo: \"\",\r\n    cidade: \"\",\r\n    uf: \"\",\r\n    nomeObra: \"\",\r\n    produto: \"\",\r\n    obs: \"\",\r\n    anexo: \"\",\r\n    status: \"00\",\r\n  });\r\n\r\n  const [selected, setSelected] = React.useState([]);\r\n\r\n  const colourStyles = {\r\n    control: styles => ({ ...styles, backgroundColor: 'white' }),\r\n    container: styles => ({ ...styles, width: 300 })\r\n  };\r\n\r\n  //\r\n  // Quando se altera um campo na tela, persisto ele no state do react\r\n  //\r\n  const inputHandleChange = (event) => {\r\n\r\n    let v;\r\n    if (event.target.type === \"checkbox\") {\r\n      v = event.target.checked;\r\n\r\n    } else if (event.target.type === \"file\") {\r\n      v = event.target.files;\r\n\r\n    } else {\r\n      v = event.target.value;\r\n    }\r\n\r\n    const { name, value } = event.target;\r\n    setInputValues({ ...inputValues, [name]: v });\r\n  };\r\n\r\n  //\r\n  //Enviar registro do formulário\r\n  //\r\n  const sendHandleClick = (event) => {\r\n\r\n    setDisabled(true);\r\n\r\n    var formdata = new FormData();\r\n\r\n    for (var prop in inputValues) {\r\n      formdata.append(prop, inputValues[prop]);\r\n    }\r\n\r\n    formdata.append(\"produto\", selected);\r\n    //formdata.append(\"anexo[]\", inputValues[\"anexo\"][0]);\r\n    //formdata.append(\"anexo[]\", inputValues[\"anexo\"][1]);\r\n    \r\n    // inputValues[\"anexo\"].map(element => {\r\n    //   console.log(element);\r\n    // });\r\n   \r\n    for(let x=0; x<inputValues[\"anexo\"].length; x++) {\r\n      formdata.append(\"anexo[]\", inputValues[\"anexo\"][x]);\r\n    }\r\n\r\n    fetch(props.config.service + \"formulario?XDEBUG_SESSION_START=netbeans-xdebug\", {\r\n      method: 'POST',\r\n      body: formdata\r\n    }).then((res) => {\r\n      res.json().then((res) => {\r\n\r\n        if (res.Code === 200) {\r\n\r\n          setState([]);\r\n          setInputValues({\r\n            id: 0,\r\n            filial: 0,\r\n            codigo: 0,\r\n            nome: \"\",\r\n            sobrenome: \"\",\r\n            empresa: \"\",\r\n            email: \"\",\r\n            celular: \"\",\r\n            fixo: \"\",\r\n            cidade: \"\",\r\n            uf: \"\",\r\n            nomeObra: \"\",\r\n            produto: \"\",\r\n            obs: \"\",\r\n            anexo: \"\",\r\n            status: \"00\",\r\n          });\r\n\r\n          setSnackBarOpen({\r\n            open: true,\r\n            message: \"Dados enviados com sucesso\"\r\n          });\r\n\r\n          setDisabled(false);\r\n\r\n        } else {\r\n          setSnackBarOpen({\r\n            open: true,\r\n            message: res.Message\r\n          });\r\n\r\n          setDisabled(false);\r\n        }\r\n      })\r\n    });\r\n  }\r\n\r\n  //\r\n  // Rotina para fechar a caixa de mensagem de erro\r\n  //\r\n  const snakeBar_HandleClose = (event, reason) => {\r\n    setSnackBarOpen({\r\n      open: false,\r\n      message: \"\"\r\n    });\r\n  };\r\n\r\n  const handleCloseDialog = (event) => {\r\n    setOpenDialog(false);\r\n  }\r\n\r\n  const produtoHandleChange = (event) => {\r\n    let value = event.currentTarget.value;\r\n\r\n    let newSelected = [];\r\n\r\n    const selectedIndex = selected.indexOf(value);\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, value);\r\n\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <Paper className={classes.paper}>\r\n        <Toolbar>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h6\"\r\n            id=\"tableTitle\"\r\n            component=\"div\"\r\n            color=\"primary\"\r\n          >\r\n            {props.title}\r\n          </Typography>\r\n        </Toolbar>\r\n        <form className={classes.form} >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={2}>\r\n              <TextField\r\n                // variant=\"standard\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Nome\"\r\n                name=\"nome\"\r\n                onChange={inputHandleChange}\r\n                value={inputValues.nome}\r\n                //disabled={disabled}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <TextField\r\n                // variant=\"standard\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Sobrenome\"\r\n                name=\"sobrenome\"\r\n                onChange={inputHandleChange}\r\n                value={inputValues.sobrenome}\r\n              //disabled={disabled}\r\n              // required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                onChange={inputHandleChange}\r\n                value={inputValues.email}\r\n                //disabled={disabled}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Celular\"\r\n                name=\"celular\"\r\n                onChange={inputHandleChange}\r\n                value={inputValues.celular}\r\n              //disabled={disabled}\r\n              // required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={2}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Fixo\"\r\n                name=\"fixo\"\r\n                onChange={inputHandleChange}\r\n                value={inputValues.fixo}\r\n                //disabled={disabled}\r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Empresa\"\r\n                name=\"empresa\"\r\n                onChange={inputHandleChange}\r\n                value={inputValues.empresa}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Cidade\"\r\n                name=\"cidade\"\r\n                onChange={inputHandleChange}\r\n                value={inputValues.cidade}\r\n                \r\n                required\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={3}>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                className={classes.FormControlLabel}\r\n                fullWidth\r\n                required\r\n              >\r\n                <InputLabel htmlFor=\"standard-age-native-simple\">Estado</InputLabel>\r\n                <Select\r\n                  variant=\"outlined\"\r\n                  \r\n                  native\r\n                  \r\n                  name=\"uf\"\r\n                  onChange={inputHandleChange}\r\n                  value={inputValues.uf}\r\n                >                  \r\n                  <option value=\"\"></option>\r\n                  <option value=\"147372\">AC</option>\r\n                  <option value=\"147373\">AL</option>\r\n                  <option value=\"147375\">AP</option>\r\n                  <option value=\"147374\">AM</option>\r\n                  <option value=\"147376\">BA</option>\r\n                  <option value=\"147377\">CE</option>\r\n                  <option value=\"147379\">ES</option>\r\n                  <option value=\"147380\">GO</option>\r\n                  <option value=\"147381\">MA</option>\r\n                  <option value=\"147384\">MT</option>\r\n                  <option value=\"147383\">MS</option>\r\n                  <option value=\"147382\">MG</option>\r\n                  <option value=\"147385\">PA</option>\r\n                  <option value=\"147386\">PB</option>\r\n                  <option value=\"147365\">PR</option>\r\n                  <option value=\"147387\">PE</option>\r\n                  <option value=\"147388\">PI</option>\r\n                  <option value=\"147389\">RJ</option>\r\n                  <option value=\"147390\">RN</option>\r\n                  <option value=\"147366\">RS</option>\r\n                  <option value=\"147391\">RO</option>\r\n                  <option value=\"147392\">RR</option>\r\n                  <option value=\"147367\">SC</option>\r\n                  <option value=\"147394\">SP</option>\r\n                  <option value=\"147393\">SE</option>\r\n                  <option value=\"147395\">TO</option>\r\n                  <option value=\"147378\">DF</option>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Nome da Obra\"\r\n                name=\"nomeObra\"\r\n                onChange={inputHandleChange}\r\n                value={inputValues.nomeObra}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <FormLabel component=\"legend\">Produto / Serviço*</FormLabel>\r\n              <FormGroup row>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.brises}\r\n                      onChange={produtoHandleChange}\r\n                      name=\"brises\"\r\n                      color=\"primary\"\r\n                      value=\"147413\"\r\n                    />\r\n                  }\r\n                  label=\"Brises\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.acm}\r\n                      onChange={produtoHandleChange}\r\n                      name=\"acm\"\r\n                      color=\"primary\"\r\n                      value=\"147412\"\r\n                    />\r\n                  }\r\n                  label=\"ACM\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.pisoElevado}\r\n                      onChange={produtoHandleChange}\r\n                      name=\"pisoElevado\"\r\n                      color=\"primary\"\r\n                      value=\"147421\"\r\n                    />\r\n                  }\r\n                  label=\"Piso Elevado\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.forro}\r\n                      onChange={produtoHandleChange}\r\n                      name=\"forro\"\r\n                      color=\"primary\"\r\n                      value=\"147417\"\r\n                    />\r\n                  }\r\n                  label=\"Forro\"\r\n                />                \r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.piso}\r\n                      onChange={produtoHandleChange}\r\n                      name=\"piso\"\r\n                      color=\"primary\"\r\n                      value=\"147420\"\r\n                    />\r\n                  }\r\n                  label=\"Piso\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.carpete}\r\n                      onChange={produtoHandleChange}\r\n                      name=\"carpete\"\r\n                      color=\"primary\"\r\n                      value=\"147414\"\r\n                    />\r\n                  }\r\n                  label=\"Carpete\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.drywall}\r\n                      onChange={produtoHandleChange}\r\n                      name=\"drywall\"\r\n                      color=\"primary\"\r\n                      value=\"147415\"\r\n                    />\r\n                  }\r\n                  label=\"Drywall\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.reforma}\r\n                      onChange={produtoHandleChange}\r\n                      name=\"reforma\"\r\n                      color=\"primary\"\r\n                      value=\"147423\"\r\n                    />\r\n                  }\r\n                  label=\"Reforma\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.estruturaMetalica}\r\n                      onChange={produtoHandleChange}\r\n                      name=\"estruturaMetalica\"\r\n                      color=\"primary\"\r\n                      value=\"147416\"\r\n                    />\r\n                  }\r\n                  label=\"Estrutura Metálica\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.projeto}\r\n                      onChange={produtoHandleChange}\r\n                      name=\"projeto\"\r\n                      color=\"primary\"\r\n                      value=\"147422\"\r\n                    />\r\n                  }\r\n                  label=\"Projeto\"\r\n                />                \r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      checked={state.outros}\r\n                      onChange={produtoHandleChange}\r\n                      name=\"outros\"\r\n                      color=\"primary\"\r\n                      value=\"147419\"\r\n                    />\r\n                  }\r\n                  label=\"Outros\"\r\n                />\r\n              </FormGroup>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} sm={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                label=\"Observações\"\r\n                name=\"obs\"\r\n                onChange={inputHandleChange}\r\n                value={inputValues.obs}\r\n              //disabled={disabled}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12}>\r\n              <FormLabel component=\"legend\">Anexar seu Projeto / Fotos:</FormLabel><br />\r\n              <input\r\n                type=\"file\"\r\n                name=\"anexo\"\r\n                multiple\r\n                onChange={inputHandleChange}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container justify=\"flex-start\">\r\n            <Grid item>\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={sendHandleClick}\r\n                disabled={disabled}\r\n              >\r\n                ENVIAR\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n\r\n      <Snackbar\r\n        open={snackBarOpen.open}\r\n        //backgroundColor={snackBarOpen.background}\r\n        //severity=\"success\"\r\n        anchorOrigin={{\r\n          vertical: 'top',\r\n          horizontal: 'center',\r\n        }}\r\n        onClose={snakeBar_HandleClose}\r\n        //TransitionComponent={state.Transition}\r\n        TransitionComponent={Fade}\r\n        message={snackBarOpen.message}\r\n        autoHideDuration={3000}\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={snakeBar_HandleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      /> */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Switch, Route, Router } from \"react-router\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport PeopleIcon from \"@material-ui/icons/People\";\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\n\r\nimport Login from \"./login\";\r\nimport Main from \"./main\";\r\n// import Configuracoes from \"./geral/configuracoes\";\r\n// import VisaoGeral from \"./geral/visao-geral\";\r\n// import Usuarios from \"./geral/usuarios\";\r\n\r\nimport Configuracoes from \"./general/configuracoes/configuracoes\";\r\nimport VisaoGeral from \"./general/visao-geral\";\r\nimport Usuarios from \"./general/usuarios/usuarios\";\r\n\r\nimport Formulario from \"./general/formulario\";\r\n\r\nexport default function App(props) {\r\n\r\n    const modules = [\r\n      {\r\n        path: \"/visao-geral\", \r\n        ui: <VisaoGeral {...props} title=\"Visão Geral\" />,\r\n        title: \"Visão Geral\", \r\n        tooltip: \"Visão Geral\",\r\n        icon: <DashboardIcon />\r\n      },\r\n      {\r\n        path: \"/configuracoes\", \r\n        ui: <Configuracoes {...props} title=\"Configurações\" />,\r\n        title: \"Configurações\", \r\n        tooltip: \"Configurações\",\r\n        icon: <SettingsIcon />\r\n      },\r\n      {\r\n        path: \"/usuarios\", \r\n        ui: <Usuarios {...props} title=\"Usuários\" />,\r\n        title: \"Usuários\", \r\n        tooltip: \"Usuários\",\r\n        icon: <PeopleIcon />\r\n      },\r\n      // {\r\n      //   path: \"/form\", \r\n      //   ui: <Formulario {...props} title=\"Formulário\" />,\r\n      //   title: \"Formulário\", \r\n      //   tooltip: \"Formulário\",\r\n      //   icon: <ListAltIcon />\r\n      // }\r\n    ];\r\n    \r\n    return (\r\n    <BrowserRouter basename={props.config.baseName}>\r\n      <Switch>\r\n        <Route key=\"/\" exact path=\"/\" render={() => <Login {...props} />} />\r\n        <Route key=\"/formulario\" exact path=\"/formulario\" render={() => <Formulario {...props} />} />\r\n        {\r\n          modules.map(\r\n            item => <Route key={item.path} exact path={item.path} render={(props) => <Main {...props} ui={item.ui} modules={modules} />} />\r\n          )\r\n        }\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./app\";\r\n\r\nlet baseName = \"/clientes/pontotrack\";\r\nlet service = \"https://www.vsisolucoes.com.br/clientes/pontotrack/api/\";\r\nlet pathRpt = \"/clientes/pontotrack\";\r\n\r\nif (window.location.href.indexOf(\"localhost\") > 0) {\r\n  baseName = \"\";\r\n  service = \"http://localhost/pontotrack/api/\";\r\n  pathRpt = \"http://localhost/pontotrack\";\r\n}\r\n\r\nconst config = {\r\n  baseName: baseName,\r\n  service: service,\r\n  pathRpt: pathRpt\r\n};\r\n\r\ndocument.title = \"pontotrack\";\r\n\r\nReactDOM.render(<App config={config} />, document.getElementById(\"root\"));\r\n\r\n    "],"sourceRoot":""}